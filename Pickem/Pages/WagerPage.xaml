<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="Pickem.Pages.WagerPage" 
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:models="clr-namespace:Pickem.Models" 
             xmlns:conv="clr-namespace:Pickem.Converters" 
             xmlns:behaviors="clr-namespace:Pickem.Behaviors" Title="Wagers">

  <ContentPage.Behaviors>
    <behaviors:UserChipBehavior />
  </ContentPage.Behaviors>

  <ContentPage.Resources>
    <ResourceDictionary>
      <Style x:Key="WagerEntryStyle" TargetType="Entry">
        <Setter Property="FontSize">
          <OnPlatform x:TypeArguments="x:Double">
            <On Platform="Android" Value="15" />
            <On Platform="iOS,MacCatalyst" Value="16" />
            <On Platform="WinUI" Value="16" />
          </OnPlatform>
        </Setter>
        <Setter Property="TextColor" Value="#111111" />
        <Setter Property="HeightRequest" Value="44" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="BackgroundColor" Value="Transparent" />
      </Style>

      <Style TargetType="Label">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="LineHeight" Value="1.2" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
      </Style>

      <Color x:Key="AccentBlue">#2563EB</Color>

      <Style TargetType="CheckBox">
        <Setter Property="Scale" Value="0.9" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Color" Value="{StaticResource AccentBlue}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
      </Style>

      <conv:ZeroToEmptyConverter x:Key="ZeroToEmpty" />
      <conv:RowBackgroundConverter x:Key="RowBg" />
    </ResourceDictionary>
  </ContentPage.Resources>

  <Grid Padding="16,0" RowSpacing="0" RowDefinitions="Auto,Auto,*">

    <!-- Row 0: week controls + validation banner -->
    <VerticalStackLayout Spacing="10" Grid.Row="0">
      <Grid ColumnDefinitions="50,Auto,Auto,50,*,Auto,Auto,Auto" RowDefinitions="Auto" ColumnSpacing="8">
        <Button Grid.Column="0" Text="◀" Clicked="OnPrevWeek" />
        <Label Grid.Column="1" Text="Week" VerticalOptions="Center" />
        <Label x:Name="WeekLabel" Grid.Column="2" Text="1" FontAttributes="Bold" VerticalOptions="Center" />
        <Button Grid.Column="3" Text="▶" Clicked="OnNextWeek" />
        <Label Grid.Column="4" Text="" />
        <ActivityIndicator Grid.Column="5" x:Name="Busy" IsVisible="False" IsRunning="False" VerticalOptions="Center" />
        <Button Grid.Column="6" x:Name="CancelBtn" Text="Cancel" Clicked="OnCancelAll" IsEnabled="False" />
        <Button Grid.Column="7" x:Name="SaveAllBtn" Text="Save" Clicked="OnSaveAll" IsEnabled="False" />
      </Grid>

      <Border x:Name="WarnBorder" Stroke="Transparent" Background="Pink" IsVisible="False" StrokeShape="RoundRectangle 10">
        <Label x:Name="WarnLabel" TextColor="Blue" Padding="8,6" IsVisible="False" LineBreakMode="WordWrap" />
      </Border>
    </VerticalStackLayout>

    <!-- Row 1: purple header OUTSIDE the CollectionView -->
    <Border Grid.Row="1" Stroke="Transparent" Background="Purple" StrokeShape="RoundRectangle 10" Margin="0,6,0,2">
      <Grid Padding="4,0,10,0" HeightRequest="30" ColumnSpacing="8" ColumnDefinitions="55,*,33,*,33">
        <Label Grid.Column="0" Text="Wager" TextColor="White" FontAttributes="Bold" HorizontalTextAlignment="End" VerticalTextAlignment="Center" />
        <Label Grid.Column="1" Text="Visitor Team" TextColor="White" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
        <Label Grid.Column="2" Text="" />
        <Label Grid.Column="3" Text="Home Team" TextColor="White" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
        <Label Grid.Column="4" Text="" />
      </Grid>
    </Border>

    <!-- Row 2: list (no Header inside) -->
    <CollectionView Grid.Row="2" x:Name="WagerList" ItemsLayout="VerticalList" Margin="0">
      <CollectionView.ItemTemplate>
        <DataTemplate x:DataType="models:WagerItem">
          <Grid Padding="4,0,4,0" ColumnSpacing="2" RowSpacing="0" RowDefinitions="Auto,1" ColumnDefinitions="40,*,36,*,36" BackgroundColor="{Binding ., Converter={StaticResource RowBg}}">

            <Entry Grid.Row="0" Grid.Column="0" Keyboard="Numeric" WidthRequest="40" HorizontalTextAlignment="Center" Style="{StaticResource WagerEntryStyle}" Placeholder="-" Text="{Binding Wager, Mode=TwoWay, Converter={StaticResource ZeroToEmpty}}" TextChanged="OnWagerEdited">
              <Entry.Triggers>
                <DataTrigger TargetType="Entry" Binding="{Binding IsTieBreak}" Value="True">
                  <Setter Property="Placeholder" Value="TB (> 2)" />
                </DataTrigger>
              </Entry.Triggers>
            </Entry>

            <Label Grid.Row="0" Grid.Column="1" Text="{Binding Visitor}">
              <Label.Triggers>
                <DataTrigger TargetType="Label" Binding="{Binding IsTieBreak}" Value="True">
                  <Setter Property="Grid.ColumnSpan" Value="4" />
                  <Setter Property="FontAttributes" Value="Bold" />
                </DataTrigger>
              </Label.Triggers>
            </Label>

            <CheckBox Grid.Row="0" Grid.Column="2" IsChecked="{Binding VisitorWin, Mode=TwoWay}" CheckedChanged="OnVisitorCheckedChanged">
              <CheckBox.Triggers>
                <DataTrigger TargetType="CheckBox" Binding="{Binding IsTieBreak}" Value="True">
                  <Setter Property="IsVisible" Value="False" />
                  <Setter Property="IsEnabled" Value="False" />
                  <Setter Property="InputTransparent" Value="True" />
                </DataTrigger>
              </CheckBox.Triggers>
            </CheckBox>

            <Label Grid.Row="0" Grid.Column="3" Text="{Binding Home}">
              <Label.Triggers>
                <DataTrigger TargetType="Label" Binding="{Binding IsTieBreak}" Value="True">
                  <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
              </Label.Triggers>
            </Label>

            <CheckBox Grid.Row="0" Grid.Column="4" IsChecked="{Binding HomeWin, Mode=TwoWay}" CheckedChanged="OnHomeCheckedChanged">
              <CheckBox.Triggers>
                <DataTrigger TargetType="CheckBox" Binding="{Binding IsTieBreak}" Value="True">
                  <Setter Property="IsVisible" Value="False" />
                  <Setter Property="IsEnabled" Value="False" />
                  <Setter Property="InputTransparent" Value="True" />
                </DataTrigger>
              </CheckBox.Triggers>
            </CheckBox>

            <BoxView Grid.Row="1" Grid.ColumnSpan="5" HeightRequest="1" BackgroundColor="Black" VerticalOptions="End" Opacity="0.25" />
          </Grid>
        </DataTemplate>
      </CollectionView.ItemTemplate>
    </CollectionView>
  </Grid>
</ContentPage>
